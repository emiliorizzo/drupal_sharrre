<?php
/**
 * @file
 * Drupal Sharrre Module - Drupal Social Networks Share Icons 
 */

/**
 * Implements hook_help().
 **/
function sharrre_help($path, $arg) {
  switch ($path) {
   case "admin/help#sharrre":
      return '<p>' . t("Sharrre Module") . '</p>';
   break;
  }
}

/**
 * Implements hook_menu().
 * */
function sharrre_menu(){
  $items = array();
  $items['admin/config/sharrre'] = array(
        'title' => 'Sharrre',
        'description' => 'Configuration for the Sharrre module.',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('sharrre_admin_form'),
        'access arguments' => array('administer users'),
        'file' => 'sharrre.admin.inc',
        'type' => MENU_NORMAL_ITEM,
        );
  return $items;
}


/**
 * Implements hook_libraries_info().
 */
function sharrre_libraries_info() {
  $libraries['sharrre'] = array(
    'name' => 'Sharrre - jQuery plugin for sharing buttons',
    'vendor url' => 'http://sharrre.com/',
    'download url' => 'https://github.com/Julienh/Sharrre/archive/1.3.5.zip',
    'files' => array(
      'js' => array(
        'jquery.sharrre.min.js',
      ),
      'php' => array(
        'sharrre.php',
      ),
    ),
  );

  return $libraries;
}
/**
 * Implements hook_libraries().
 */
 
function sharrre_libraries() {
  $libraries['sharrre'] = array(
    'title' => 'Sharrre - jQuery plugin for sharing buttons',
    'website' => 'http://sharrre.com/',
      'js' => array(
        'jquery.sharrre.min.js',
      ),
      'php' => array(
        'sharrre.php',
      ),
  );
  return $libraries;
}

/**
* Implements hook_node_view().
*/

function sharrre_node_view($node, $view_mode, $langcode){
  $domain = 'http://buenosairesmequiere.com';
  $lib_path = libraries_get_path('sharrre');
  $services =  _sharrre_services();
  $pref = 'sharrre-';
  $setts = _sharrre_get_settings();
  $send = array();
  //$url = $domain . url('/node/'.$node->nid);
   $url = 'http://aguaspatagonicas.com';
   foreach($services as $service => $title){
     if ( ( $service != 'sharrre' ) && ( $setts['sharrre'][$service] ) ){
      $node->sharrre[$service] = _sharrre_icon($service,$url,$pref);
       $send[$service] = _sharrre_fix_vals($setts[$service]);
       $send[$service]['urlCurl'] = '/'.$lib_path.'/sharrre.php';
        $send[$service]['share'][$service] = (bool)$setts['sharrre'][$service];
     }
     }
   
  drupal_add_js(array('sharrre' => array(
                                         'sharrephp' => '/' . $lib_path.'/sharrre.php',
                                         'pref' => $pref,
                                         'setts' => drupal_json_encode($send),
                                          )), 'setting');
                                          
  drupal_add_js($lib_path . '/jquery.sharrre.js');
  drupal_add_js(drupal_get_path('module', 'sharrre') .'/js/sharrre.js' );
  drupal_add_css(drupal_get_path('module', 'sharrre') .'/css/sharrre.css' );
}


function sharrre_preprocess_node(&$variables) {
 $variables['sharrre_icons'] = '<div class="sharrre-icons">#TEST#';
  foreach( $variables['sharrre'] as $service => $html){
   $variables['sharrre_icons'] .= $html;  
  }
 $variables['sharrre_icons'] .= '</div>';
}

/**
 * Helper Functions
 */
 
function _sharrre_services(){
 return array('sharrre' => '',
              'googlePlus' => '+1',
              'facebook'=> 'like',
              'twitter'=> 'tweet',
              'digg'=> 'diggit',
              'delicious'=> 'delicious',
              'stumbleupon' => 'stumbleupon',
              'linkedin' => 'linkedin',
              'pinterest' => 'pin',
              );
}

/**
 * Create Icons 
 */
function _sharrre_icon($service,$url,$pref){
 $html = '<div class="'.$pref.strtolower($service).'" data-url="'.$url.'">';
 $html .= '</div>';
 return $html;
}

function _sharrre_settings(){
return array( 'title' => 'Title',
              'shorterTotal' => 'Shorter Total',
              'enableHover'=> 'Enable Hover',
              'enableCounter'=> 'Enable Counter',
              'enableTracking'=> 'Enable Tracking',
              ); 
}

function _sharrre_get_sett($settings,$context,$prop,$def){
 if( is_array( $settings )){
  if( isset( $settings[$context][$prop] ) ){
   return $settings[$context][$prop];
  }
 return $def;
 }
}

function _sharrre_get_settings(){ 
 $vals = variable_get('sharrre_settings',NULL);
 if( $vals ){
  $vals = unserialize($vals);
 }
return $vals;
}


function _sharrre_fix_vals($arr){
 foreach($arr as $k => $v){
  if( ($v=='1') or ($v=='0') ){
   $arr[$k]=(boolean)$v;
  }
  if($k == 'title'){
   $arr[$k]=htmlentities($v);
  }
 }
return $arr;
}


